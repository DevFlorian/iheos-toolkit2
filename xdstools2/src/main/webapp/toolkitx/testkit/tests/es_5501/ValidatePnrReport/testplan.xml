<TestPlan>
    <!--  Current status: Entered, some testing done. xpaths all seem to work
          test data on es_5500 is dated, not all correct.
          Some assertions waiting for clarification from Steve M
     -->
    <Test>es_5501/validatePnrReport</Test>
    <TestStep id="validate PnR Request Metadata for Report">
        <Goal>Validate messages sent from Edge Server</Goal>
        <ExpectedStatus>Success</ExpectedStatus>
        <XMLValidation rootXpath="//*[local-name()='SubmitObjectsRequest']">
            <UseReport reportName="returnedId" section="validatePIX" step="saveReturnedId" useAs="$returnedId$"/>
            <Parameters>
                RegPackage=//rim:RegistryObjectList/rim:RegistryPackage
                Class=${RegPackage}/rim:Classification
                contentTypeCode=${Class}[@classificationScheme='urn:uuid:aa543740-bdda-424e-8c96-df4873be8500']
                PatientId=${RegPackage}/rim:ExternalIdentifier[@identificationScheme='urn:uuid:6b5aea1a-874d-4603-a4bc-96a0a7b38446']
                SourceId=${RegPackage}/rim:ExternalIdentifier[@identificationScheme='urn:uuid:554ac39e-e3fe-47fe-b233-965d2a147832']
                UniqueId=${RegPackage}/rim:ExternalIdentifier[@identificationScheme='urn:uuid:96fdda7c-d067-4183-912e-bf5ee74998a8']
                Document=//rim:RegistryObjectList/rim:ExtrinsicObject[${i}]
                DocAuthor=${Document}/rim:Classification[@classificationScheme='urn:uuid:93606bcf-9494-43ec-9b4e-a7748d1a838d']
                ClassCode=${Document}/rim:Classification[@classificationScheme='urn:uuid:41a5887f-8865-4c09-adf7-e362475b143a']
                ConfidentialityCode=${Document}/rim:Classification[@classificationScheme='urn:uuid:f4f85eac-e6cb-4883-b524-f2705394840f']
                FormatCode=${Document}/rim:Classification[@classificationScheme='urn:uuid:a09d5840-386c-46f2-b5ad-9c3699a4309d']
                HealthCareFacility=${Document}/rim:Classification[@classificationScheme='urn:uuid:f33fb8ac-18af-42cc-ae0e-ed0b0bdb91e1']
                PracticeSetting=${Document}/rim:Classification[@classificationScheme='urn:uuid:cccf5598-8b07-4b77-a05e-ae952c785ead']
                TypeCode=${Document}/rim:Classification[@classificationScheme='urn:uuid:f0306f51-975f-434e-a61c-c59651d33983']
            </Parameters>
            <SimTransaction id="rr" transaction="prb"/>
            <Assertions>
                <Assert id="Submission Set: author Institution" process="Equals" value="RSNA ISN">
                    ${Class}/rim:Slot[@name='authorInstitution']/rim:ValueList/rim:Value/text()
                </Assert>
                <Assert id="Submission Set: author person" process="Matches" value="^RSNA ISN\^RSNA ISN\^RSNA ISN\^.+ISO$">
                    ${Class}/rim:Slot[@name='authorPerson']/rim:ValueList/rim:Value/text()
                </Assert>
                <Assert id="content type code: code" process="Equals" value="Imaging Exam">
                    ${contentTypeCode}/@nodeRepresentation
                </Assert>
                <Assert id="content type code: display name" process="Equals" value="Imaging Exam">
                    ${contentTypeCode}/rim:Name/rim:LocalizedString/@value
                </Assert>
                <Assert id="content type code: scheme name" process="Equals" value="1.3.6.1.4.1.19376.3.840.1.1.3">
                    ${contentTypeCode}/rim:Slot[@name='codingScheme']/rim:ValueList/rim:Value/text()
                </Assert>
                <Assert id="entry UUID" process="Equals" value="UUID">
                    ${RegPackage}/@id
                </Assert>
                <Assert id="Patient Id" process="Matches" value="^$returnedId$\^\^\^.+ISO$">
                    ${PatientId}/@value
                </Assert>
                <Assert id="Patient Id: Localized string" process="Equals" value="XDSSubmissionSet.patientId">
                    ${PatientId}/rim:Name[1]/rim:LocalizedString/@value
                </Assert>
                <Assert id="Submission Time" process="Equals" value="DateTime">
                    ${RegPackage}/rim:Slot[@name='submissionTime']/rim:ValueList[1]/rim:Value[1]/text()
                </Assert>
                <Assert id="Source Id: Value" process="Equals" value="OID">
                    ${SourceId}/@value
                </Assert>
                <Assert id="Source Id: Localized string" process="Equals" value="XDSSubmissionSet.sourceId">
                    ${SourceId}/rim:Name[1]/rim:LocalizedString/@value
                </Assert>
                <Assert id="Unique Id: Value" process="Required">
                    ${UniqueId}/@value
                </Assert>
                <Assert id="Unique Id: Localized string" process="Equals" value="XDSSubmissionSet.uniqueId">
                    ${UniqueId}/rim:Name[1]/rim:LocalizedString/@value
                </Assert>
                <Assert id="number of documents" process="Equals" value="1">
                    count(//rim:RegistryObjectList/rim:ExtrinsicObject)
                </Assert>
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="author institution" process="Equals" value="RSNA ISN">
                    ${DocAuthor}/rim:Slot[@name='authorInstitution']/rim:ValueList/rim:Value/text()
                </Assert>
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="author person" process="Matches" value="^RSNA ISN\^RSNA ISN\^RSNA ISN.+ISO$">
                    ${DocAuthor}/rim:Slot[@name='authorPerson']/rim:ValueList/rim:Value/text()
                </Assert>

                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="class code: code" process="Equals" value="REPORTS">
                    ${ClassCode}/@nodeRepresentation
                </Assert>
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="class code: display name" process="Equals" value="Report">
                    ${ClassCode}/rim:Name/rim:LocalizedString/@value
                </Assert>
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="class code: scheme name" process="Equals" value="1.3.6.1.4.1.19376.1.2.6.1">
                    ${ClassCode}/rim:Slot[@name='codingScheme']/rim:ValueList/rim:Value/text()
                </Assert>

                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="confidentialityCode: code" process="Equals" value="V">
                    ${ConfidentialityCode}/@nodeRepresentation
                </Assert>
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="confidentialityCode: display name" process="Equals" value="very restricted">
                    ${ConfidentialityCode}/rim:Name/rim:LocalizedString/@value
                </Assert>
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="confidentialityCode: scheme name" process="Equals" value="2.16.840.1.113883.5.25">
                    ${ConfidentialityCode}/rim:Slot[@name='codingScheme']/rim:ValueList/rim:Value/text()
                </Assert>

                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="creation time" process="Equals" value="DateTime">
                    ${Document}/rim:Slot[@name='creationTime']/rim:ValueList/rim:Value/text()
                </Assert>

                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="entry id" process="Equals" value="UUID">
                    ${Document}/@id
                </Assert>

                <!-- This is in spec, but not in xls. ???? -->
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="eventCodeList" process="Required" >
                    ${Document}
                </Assert>

                <!-- This is in spec, and there is one in submission set but not in xls for document. ???? -->
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="sourceId" process="Required" >
                    ${Document}
                </Assert>

                <!-- This is in spec, but the value is currently lined out ???? -->
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="formatCode: code" process="Required" >
                    ${FormatCode}/@nodeRepresentation
                </Assert>
                <!-- this value is for report. For image, SOP class UID of DICOM object -->
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="formatCode: display name" process="Equals" value="urn:ihe:rad:PDF">
                    ${FormatCode}/rim:Name/rim:LocalizedString/@value
                </Assert>
                <!-- this value is for report. for image, value is "1.2.840.10008.2.6.1" -->
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="formatCode: scheme name" process="Equals" value="1.3.6.1.4.1.19376.1.2.3">
                    ${FormatCode}/rim:Slot[@name='codingScheme']/rim:ValueList/rim:Value/text()
                </Assert>

                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="health care facility: code" process="Equals" value="33022008" >
                    ${HealthCareFacility}/@nodeRepresentation
                </Assert>
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="health care facility: display name" process="Equals" value="Hospital-based outpatient clinic or department--OTHER-NOT LISTED">
                    ${HealthCareFacility}/rim:Name/rim:LocalizedString/@value
                </Assert>
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="health care facility: scheme name" process="Equals" value="2.16.840.1.113883.3.88.12.80.67">
                    ${HealthCareFacility}/rim:Slot[@name='codingScheme']/rim:ValueList/rim:Value/text()
                </Assert>

                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="languageCode" process="Equals" value="en-US" >
                    ${Document}/rim:Slot[@name='languageCode']/rim:ValueList/rim:Value/text()
                </Assert>

                <!-- This is for report, "application/dicom" for DICOM objects. -->
                <!-- Spec also list text/plain and text/xml. ???? -->
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="mimeType" process="Equals" value="application/pdf" >
                    ${Document}/@mimeType
                </Assert>

                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="objectType" process="Equals" value="urn:uuid:7edca82f-054d-47f2-a032-9b2a5b5186c1" >
                    ${Document}/@objectType
                </Assert>

                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="patientId" process="Matches" value="^$returnedId$\^\^\^.+ISO$">
                    ${Document}/rim:ExternalIdentifier[@identificationScheme='urn:uuid:58a6f841-87b3-4a3e-92fd-a8ffeff98427']/@value
                </Assert>

                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="practice setting: code" process="Equals" value="R-3027B" >
                    ${PracticeSetting}/@nodeRepresentation
                </Assert>
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="practice setting: display name" process="Equals" value="Radiology">
                    ${PracticeSetting}/rim:Name/rim:LocalizedString/@value
                </Assert>
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="practice setting: scheme name" process="Equals" value="2.16.840.1.113883.6.96">
                    ${PracticeSetting}/rim:Slot[@name='codingScheme']/rim:ValueList/rim:Value/text()
                </Assert>

                <!-- In spec, can't find in examples ???? -->
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="referenceIdList" process="Required" >
                    ${Document}
                </Assert>

                <!-- In spec, can't find in examples ???? -->
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="accession number assigning authority" process="Required" >
                    ${Document}
                </Assert>

                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="service start time" process="Equals" value="DateTime" >
                    ${Document}/rim:Slot[@name='serviceStartTime']/rim:ValueList/rim:Value/text()
                </Assert>

                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="service stop time" process="Equals" value="DateTime" >
                    ${Document}/rim:Slot[@name='serviceStopTime']/rim:ValueList/rim:Value/text()
                </Assert>

                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="sourcePatientId" process="Matches" value="^$returnedId$\^\^\^.+ISO$">
                    ${Document}/rim:Slot[@name='sourcePatientId']/rim:ValueList/rim:Value/text()
                </Assert>

                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="sourcePatientInfo: PID-3" process="Matches" value="^PID-3\|$returnedId$\^\^\^.+ISO$">
                    ${Document}/rim:Slot[@name='sourcePatientInfo']/rim:ValueList/rim:Value[1]/text()
                </Assert>

                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="sourcePatientInfo: PID-5" process="Begins with" value="PID-5|RSNA ISN^RSNA ISN">
                    ${Document}/rim:Slot[@name='sourcePatientInfo']/rim:ValueList/rim:Value[2]/text()
                </Assert>

                <!-- for typeCode values - are these just for reports? what about images? ???? -->
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="typeCode: code" process="Equals" value="18748-4" >
                    ${TypeCode}/@nodeRepresentation
                </Assert>
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="typeCode: display name" process="Equals" value="Diagnostic Imaging Report">
                    ${TypeCode}/rim:Name/rim:LocalizedString/@value
                </Assert>
                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="typeCode: scheme name" process="Equals" value="2.16.840.1.113883.6.1">
                    ${TypeCode}/rim:Slot[@name='codingScheme']/rim:ValueList/rim:Value/text()
                </Assert>

                <Assert forEach="${Document}" instanceId="${Document}/@id"
                        id="document unique id" process="Equals" value="OID">
                    ${Document}/rim:ExternalIdentifier[@identificationScheme='urn:uuid:2e82c1f6-a085-4c72-9da3-8640a32e42ab']/@value
                </Assert>

            </Assertions>
        </XMLValidation>
    </TestStep>
</TestPlan>